1) Установил Git

2) Провел первоначальную настройку системы контроля версий git
git config --global user.name "ivannikov"
git config --global user.email "kyrill2014@mail.ru"
3) Создал каталог для выполнения лабораторной работы(каталог проекта)

4) Инициализировал (git init) git

5) В каталоге проекта создать текстовый файл отчета (ФИО_ЛР1.txt в кодировке Win1251). В этом файле будет отчет по ЛР №1. Проиндексировать его.
git add *.txt
6) Cделать первый коммит
git commit -m 'first com'

7) Игнорирование: добавить файл .gitignore, добавить в него название текстового файла, проиндексировать все файлы, теперь при индексировании текстового файла он не будет находиться.
8) Сравнение: команда git diff показывает изменения в файле
9) Удаление : команда rm .txt (например удаляет все текстовые файлы)
10) Перемещениe: команда  git mv *txt newDir/newtxt.txt (переместила файл в новуб папку корневой директории)
11) Команда git log показывает все сделаные коммиты 
12) просмотр коммита (git checkout 62c5f211776391185103e174c71b8d19577343bf) вернуться к своей ветке (git checkout master)
13) ветвление: git checkout -b newVetka создает новую ветку. в ней мы можем делать новые коммиты. чтобы откатиться к ветке до этого пишем git checkout <tag> (tag создается командой git tag <имя метки>). команда git merge объединяет ветки и ставит метку master на нашу новую созданную ветку как бы пропуская коммит.
14) основная проблема слияния в том, что мы не можем объединить две параллельные ветки, которые измяняли одни и те же фалы. придется выбрать одну из веток и закоммитить ее.
15) прятание: git stash прячет текущую ветку, командой git status мы можем проверить это, команда git stash apply stash@{index} возвращает ветку, после чего надо ее проиндексировать.
end